{
  "name": "request-promise",
  "version": "0.1.4",
  "description": "Promise-based Wrapper for XHR using Request and Bluebird",
  "main": "./lib/rp.js",
  "scripts": {
    "test": "istanbul test _mocha --report html -- test/*-test*.js -R spec"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/tyabonil/request-promise"
  },
  "keywords": [
    "xhr",
    "promise",
    "request"
  ],
  "readmeFilename": "README.md",
  "author": {
    "name": "Ty Abonil"
  },
  "license": "MIT",
  "dependencies": {
    "bluebird": "^1.2",
    "request": "^2.34"
  },
  "devDependencies": {
    "mocha": "~1.17.1",
    "istanbul": "~0.2.4"
  },
  "readme": "# Request-Promise\n\nA Promises/A XHR wrapper for Bluebird and Request\n\n[Bluebird](https://github.com/petkaantonov/bluebird) and [Request](https://github.com/mikeal/request) are pretty awesome, but I found myself using the same design pattern.  This is a simple wrapper that takes in a request options object (or URI string), and returns a chainable promise.  By default, http response codes other than 200 and 201 will cause the promise to be rejected.  This can be over-ridden by setting `options.simple` to `false`.\n\nNote: As of version 0.1, `reject` now passes  an object containing the following:\n```js    \n    reject({\n                    error: body,\n                    options: c,\n                    response: response,\n                    statusCode: response.statusCode\n                });\n```\n\n## Installation\n\n`npm install request-promise`\n\n## Examples\n\n``` js\nvar rp = require('request-promise');\n\nrp('http://www.google.com')\n    .then(console.dir)\n    .catch(console.error);\n\n//'GET's and displays google.com\n\nvar options = {\n    uri : 'http://posttestserver.com/post.php',\n    method : 'POST'\n}; \n\nrp(options)\n    .then(console.dir)\n    .catch(console.error);\n\n//displays response from server after post\n\noptions.transform = function (data) { return data.length ;};\n\nrp(options)\n    .then(console.dir)\n    .catch(console.error);\n\n//transform is called just before promise is fulfilled\n//displays length of response from server after post\n\n```\n\n## MIT Licenced",
  "bugs": {
    "url": "https://github.com/tyabonil/request-promise/issues"
  },
  "homepage": "https://github.com/tyabonil/request-promise",
  "_id": "request-promise@0.1.4",
  "_from": "request-promise@~0.1.2"
}

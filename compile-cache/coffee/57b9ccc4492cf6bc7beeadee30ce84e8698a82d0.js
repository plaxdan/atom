(function() {
  var textUtils;

  textUtils = require('../src/text-utils');

  describe('text utilities', function() {
    describe('.getCharacterCount(string)', function() {
      return it('returns the number of full characters in the string', function() {
        expect(textUtils.getCharacterCount('abc')).toBe(3);
        expect(textUtils.getCharacterCount('a\uD835\uDF97b\uD835\uDF97c')).toBe(5);
        expect(textUtils.getCharacterCount('\uD835\uDF97')).toBe(1);
        expect(textUtils.getCharacterCount('\uD835')).toBe(1);
        return expect(textUtils.getCharacterCount('\uDF97')).toBe(1);
      });
    });
    describe('.hasSurrogatePair(string)', function() {
      return it('returns true when the string contains a surrogate pair', function() {
        expect(textUtils.hasSurrogatePair('abc')).toBe(false);
        expect(textUtils.hasSurrogatePair('a\uD835\uDF97b\uD835\uDF97c')).toBe(true);
        expect(textUtils.hasSurrogatePair('\uD835\uDF97')).toBe(true);
        expect(textUtils.hasSurrogatePair('\uD835')).toBe(false);
        return expect(textUtils.hasSurrogatePair('\uDF97')).toBe(false);
      });
    });
    return describe('.isSurrogatePair(string, index)', function() {
      return it('returns true when the index is the start of a high/low surrogate pair', function() {
        expect(textUtils.isSurrogatePair('a\uD835\uDF97b\uD835\uDF97c', 0)).toBe(false);
        expect(textUtils.isSurrogatePair('a\uD835\uDF97b\uD835\uDF97c', 1)).toBe(true);
        expect(textUtils.isSurrogatePair('a\uD835\uDF97b\uD835\uDF97c', 2)).toBe(false);
        expect(textUtils.isSurrogatePair('a\uD835\uDF97b\uD835\uDF97c', 3)).toBe(false);
        expect(textUtils.isSurrogatePair('a\uD835\uDF97b\uD835\uDF97c', 4)).toBe(true);
        expect(textUtils.isSurrogatePair('a\uD835\uDF97b\uD835\uDF97c', 5)).toBe(false);
        expect(textUtils.isSurrogatePair('a\uD835\uDF97b\uD835\uDF97c', 6)).toBe(false);
        expect(textUtils.isSurrogatePair('\uD835')).toBe(false);
        return expect(textUtils.isSurrogatePair('\uDF97')).toBe(false);
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiIgogIF0sCiAgIm5hbWVzIjogW10sCiAgIm1hcHBpbmdzIjogIkFBQUE7QUFBQSxNQUFBLFNBQUE7O0FBQUEsRUFBQSxTQUFBLEdBQVksT0FBQSxDQUFRLG1CQUFSLENBQVosQ0FBQTs7QUFBQSxFQUVBLFFBQUEsQ0FBUyxnQkFBVCxFQUEyQixTQUFBLEdBQUE7QUFDekIsSUFBQSxRQUFBLENBQVMsNEJBQVQsRUFBdUMsU0FBQSxHQUFBO2FBQ3JDLEVBQUEsQ0FBRyxxREFBSCxFQUEwRCxTQUFBLEdBQUE7QUFDeEQsUUFBQSxNQUFBLENBQU8sU0FBUyxDQUFDLGlCQUFWLENBQTRCLEtBQTVCLENBQVAsQ0FBMEMsQ0FBQyxJQUEzQyxDQUFnRCxDQUFoRCxDQUFBLENBQUE7QUFBQSxRQUNBLE1BQUEsQ0FBTyxTQUFTLENBQUMsaUJBQVYsQ0FBNEIsNkJBQTVCLENBQVAsQ0FBa0UsQ0FBQyxJQUFuRSxDQUF3RSxDQUF4RSxDQURBLENBQUE7QUFBQSxRQUVBLE1BQUEsQ0FBTyxTQUFTLENBQUMsaUJBQVYsQ0FBNEIsY0FBNUIsQ0FBUCxDQUFtRCxDQUFDLElBQXBELENBQXlELENBQXpELENBRkEsQ0FBQTtBQUFBLFFBR0EsTUFBQSxDQUFPLFNBQVMsQ0FBQyxpQkFBVixDQUE0QixRQUE1QixDQUFQLENBQTZDLENBQUMsSUFBOUMsQ0FBbUQsQ0FBbkQsQ0FIQSxDQUFBO2VBSUEsTUFBQSxDQUFPLFNBQVMsQ0FBQyxpQkFBVixDQUE0QixRQUE1QixDQUFQLENBQTZDLENBQUMsSUFBOUMsQ0FBbUQsQ0FBbkQsRUFMd0Q7TUFBQSxDQUExRCxFQURxQztJQUFBLENBQXZDLENBQUEsQ0FBQTtBQUFBLElBUUEsUUFBQSxDQUFTLDJCQUFULEVBQXNDLFNBQUEsR0FBQTthQUNwQyxFQUFBLENBQUcsd0RBQUgsRUFBNkQsU0FBQSxHQUFBO0FBQzNELFFBQUEsTUFBQSxDQUFPLFNBQVMsQ0FB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
//# sourceURL=/Applications/Atom.app/Contents/Resources/app/spec/text-utils-spec.coffee
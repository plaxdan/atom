(function() {
  var $, Package, ThemePackage, path;

  $ = require('atom').$;

  path = require('path');

  Package = require('../src/package');

  ThemePackage = require('../src/theme-package');

  describe("Package", function() {
    describe("when the package contains incompatible native modules", function() {
      beforeEach(function() {
        return spyOn(atom, 'inDevMode').andReturn(false);
      });
      it("does not activate it", function() {
        var pack, packagePath;
        packagePath = atom.project.resolve('packages/package-with-incompatible-native-module');
        pack = new Package(packagePath);
        expect(pack.isCompatible()).toBe(false);
        expect(pack.incompatibleModules[0].name).toBe('native-module');
        return expect(pack.incompatibleModules[0].path).toBe(path.join(packagePath, 'node_modules', 'native-module'));
      });
      return it("caches the incompatible native modules in local storage", function() {
        var cacheItem, cacheKey, packagePath;
        packagePath = atom.project.resolve('packages/package-with-incompatible-native-module');
        cacheKey = null;
        cacheItem = null;
        spyOn(global.localStorage, 'setItem').andCallFake(function(key, item) {
          cacheKey = key;
          return cacheItem = item;
        });
        spyOn(global.localStorage, 'getItem').andCallFake(function(key) {
          if (cacheKey === key) {
            return cacheItem;
          }
        });
        expect(new Package(packagePath).isCompatible()).toBe(false);
        expect(global.localStorage.getItem.callCount).toBe(1);
        expect(global.localStorage.setItem.callCount).toBe(1);
        expect(new Package(packagePath).isCompatible()).toBe(false);
        expect(global.localStorage.getItem.callCount).toBe(2);
        return expect(global.localStorage.setItem.callCount).toBe(1);
      });
    });
    return describe("theme", function() {
      var theme;
      theme = null;
      beforeEach(function() {
        return $("#jasmine-content").append($("<div class='editor'></div>"));
      });
      afterEach(function() {
        if (theme != null) {
          return theme.deactivate();
        }
      });
      describe("when the theme contains a single style file", function() {
        it("loads and applies css", function() {
          var themePath;
          expect($(".editor").css("padding-bottom")).not.toBe("1234px");
          themePath = atom.project.resolve('packages/theme-with-index-css');
          theme = new ThemePackage(themePath);
          theme.activate();
          return expect($(".editor").css("padding-top")).toBe("1234px");
        });
        return it("parses, loads and applies less", function() {
          var themePath;
          expect($(".editor").css("padding-bottom")).not.toBe("1234px");
          themePath = atom.project.resolve('packages/theme-with-index-less');
          theme = new ThemePackage(themePath);
          theme.activate();
          return expect($(".editor").css("padding-top")).toBe("4321px");
        });
      });
      describe("when the theme contains a package.json file", function() {
        return it("loads and applies stylesheets from package.json in the correct order", function() {
          var themePath;
          expect($(".editor").css("padding-top")).not.toBe("101px");
          expect($(".editor").css("padding-right")).not.toBe("102px");
          expect($(".editor").css("padding-bottom")).not.toBe("103px");
          themePath = atom.project.resolve('packages/theme-with-package-file');
          theme = new ThemePackage(themePath);
          theme.activate();
          expect($(".editor").css("padding-top")).toBe("101px");
          expect($(".editor").css("padding-right")).toBe("102px");
          return expect($(".editor").css("padding-bottom")).toBe("103px");
        });
      });
      describe("when the theme does not contain a package.json file and is a directory", function() {
        return it("loads all stylesheet files in the directory", function() {
          var themePath;
          expect($(".editor").css("padding-top")).not.toBe("10px");
          expect($(".editor").css("padding-right")).not.toBe("20px");
          expect($(".editor").css("padding-bottom")).not.toBe("30px");
          themePath = atom.project.resolve('packages/theme-without-package-file');
          theme = new ThemePackage(themePath);
          theme.activate();
          expect($(".editor").css("padding-top")).toBe("10px");
          expect($(".editor").css("padding-right")).toBe("20px");
          return expect($(".editor").css("padding-bottom")).toBe("30px");
        });
      });
      describe("reloading a theme", function() {
        beforeEach(function() {
          var themePath;
          themePath = atom.project.resolve('packages/theme-with-package-file');
          theme = new ThemePackage(themePath);
          return theme.activate();
        });
        return it("reloads without readding to the stylesheets list", function() {
          expect(theme.getStylesheetPaths().length).toBe(3);
          theme.reloadStylesheet(theme.getStylesheetPaths()[0]);
          return expect(theme.getStylesheetPaths().length).toBe(3);
        });
      });
      return describe("events", function() {
        beforeEach(function() {
          var themePath;
          themePath = atom.project.resolve('packages/theme-with-package-file');
          theme = new ThemePackage(themePath);
          return theme.activate();
        });
        return it("deactivated event fires on .deactivate()", function() {
          var spy;
          theme.onDidDeactivate(spy = jasmine.createSpy());
          theme.deactivate();
          return expect(spy).toHaveBeenCalled();
        });
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=/Applications/Atom.app/Contents/Resources/app/spec/package-spec.coffee
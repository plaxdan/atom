{"name":"grunt-peg","description":"A grunt multi task that generates parsers from PEG grammars.","version":"1.1.0","homepage":"https://github.com/dvberkel/grunt-peg","author":{"name":"Daan van Berkel","email":"daan.v.berkel.1980@gmail.com","url":"http://dvberkel.github.io/"},"repository":{"type":"git","url":"git://github.com/dvberkel/grunt-peg.git"},"bugs":{"url":"https://github.com/dvberkel/grunt-peg/issues"},"licenses":[{"type":"MIT","url":"https://github.com/dvberkel/grunt-peg/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt-contrib-jshint":"~0.1.1","grunt-contrib-clean":"~0.4.0","grunt-contrib-nodeunit":"~0.1.2","grunt":"~0.4.1","grunt-bumpup":"~0.2.0"},"peerDependencies":{"grunt":"~0.4.1"},"keywords":["gruntplugin"],"dependencies":{"pegjs":"~0.8.0"},"readme":"# grunt-peg\n\n> A grunt multi task that generates parsers from PEG grammars.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt][] before, be sure to check out the\n[Getting Started][] guide, as it explains how to create a\n[Gruntfile][] as well as install and use Grunt plugins. Once you're\nfamiliar with that process, you may install this plugin with this\ncommand:\n\n```shell\nnpm install grunt-peg --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your\nGruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-peg');\n```\n\n## The \"peg\" task\n_Run this task with the `grunt peg` command._\n\nTask targets, files and options may be specified according to the grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\n\n### Options\n\nAny specified option will be passed through directly to [PEG.js][], thus you can specify any option that PEG.js supports. See the [PEG.js documentation][] for a list of supported options.\n\n[PEG.js]: http://pegjs.majda.cz/\n[PEG.js documentation]: http://pegjs.majda.cz/documentation\n\nAn additional option is supported:\n\n#### exportVar\nType: `String`\nDefault value: 'module.exports'\n\nThe variable to which the generated parser will be assigned in the output file.\n\n### Usage Examples\n\n#### Default Options\n\nIn this example a [PEG][] grammar as described in the file\n`grammar/example.peg` is used to generate parser\n`grammar/example.js`. The default export variable is used,\ni.e. `module.exports`.\n\n```js\ngrunt.initConfig({\n  peg: {\n    example: {\n      src: \"grammar/example.peg\",\n      dest: \"grammar/example.js\"\n    }\n  }\n})\n```\n\n#### Custom Options\n\nIn this example a [PEG][] grammar as described in the file\n`grammar/example.peg` is used to generate parser\n`grammar/example.js`, the export variable being `Example.parser`.\n\n```js\ngrunt.initConfig({\n  peg: {\n    example : {\n      src: \"grammar/example.peg\",\n      dest: \"grammar/example.js\",\n      options: { exportVar: \"Example.parser\" }\n    }\n  }\n})\n```\n\n#### Passing Options to PEG\n\nIn this example a [PEG][] grammar as described in the file\n`grammar/example.peg` is used to generate parser\n`grammar/example.js`, the export variable being `Example.parser`.\nBoth the task-specific `trackLineAndColumn` and target-specific\n`cache` options will be passed through to PEG.js.\n\n```js\ngrunt.initConfig({\n  peg: {\n    options: { trackLineAndColumn: true },\n    example : {\n      src: \"grammar/example.peg\",\n      dest: \"grammar/example.js\",\n      options: {\n        exportVar: \"Example.parser\",\n        cache: true\n      }\n    }\n  }\n})\n```\n\n## PEG.js dependency\n\nAs described in [issue #6][#6] sometimes the wrong PEG.js version\nis downloaded by npm. The solution for now seems to be to call\n`npm cache clear`.\n\n## Contributing\n\nIn lieu of a formal styleguide, take care to maintain the existing\ncoding style. Add unit tests for any new or changed\nfunctionality. Lint and test your code using\n[Grunt](http://gruntjs.com/).\n\n## Release History\n\n* 2014-01-05   v1.1.0   Support PEG 0.8.0\n* 2013-08-21   v1.0.0   Remove support for old-style options\n* 2013-07-04   v0.3.0   Adhere to grunt's configuration convention\n* 2013-06-02   v0.2.0   Pass options to PEG.js\n* 2013-04-23   v0.1.0   Migrated to Grunt ~0.4.x\n\n## Contributors\n\n* [welwood08][]\n* [mstefaniuk][]\n\n[welwood08]: https://github.com/welwood08\n[mstefaniuk]: https://github.com/mstefaniuk\n\n[Grunt]: http://gruntjs.com/\n[Getting Started]: http://gruntjs.com/getting-started\n[PEG]: https://npmjs.org/package/pegjs\n[Gruntfile]: http://gruntjs.com/sample-gruntfile\n[#6]: https://github.com/dvberkel/grunt-peg/pull/6\n","readmeFilename":"README.md","_id":"grunt-peg@1.1.0","_shasum":"99721e9ce6e27274739077db876f35a2d05cf2a6","_from":"grunt-peg@~1.1.0","_resolved":"https://registry.npmjs.org/grunt-peg/-/grunt-peg-1.1.0.tgz"}